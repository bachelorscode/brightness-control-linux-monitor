{"version":3,"sources":["App.js","index.js"],"names":["App","useState","brightness","setBrightness","monitors","setMonitors","setSelectedMonitor","useEffect","a","axios","get","monitorlist","data","b","localStorage","setItem","control","e","value","target","className","name","id","map","monitor","type","onChange","min","max","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAqDeA,MAjDf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGiCJ,mBAAS,IAH1C,mBAGWK,GAHX,WAIbC,qBAAU,WACR,sBAAC,oCAAAC,EAAA,sEACqCC,IAAMC,IACxC,qCAFH,uBACeC,EADf,EACSC,KAGRP,EAAYM,GACZL,EAAmBK,EAAY,IALhC,SAOwBF,IAAMC,IAAI,6BAPlC,gBAOSE,EAPT,EAOSA,KACJC,EAAW,IAAPD,EACRE,aAAaC,QAAQ,aAAcF,GACnCV,EAAcU,GAVf,2CAAD,KAYC,IAEH,IAAMG,EAAO,uCAAG,WAAOC,GAAP,eAAAT,EAAA,6DACVU,EAAQD,EAAEE,OAAOD,MADP,SAERT,IAAMC,IAAN,oCAAuCQ,EAAQ,MAFvC,OAGdJ,aAAaC,QAAQ,aAAcG,GACnCf,EAAce,GAJA,2CAAH,sDAOb,OACE,sBAAKE,UAAU,MAAf,UACE,wBAAQC,KAAK,GAAGC,GAAG,UAAnB,SACGlB,EAASmB,KAAI,SAACC,GACb,OACE,wBAAsBN,MAAOM,EAA7B,SACGA,GADUA,QAOnB,uBACEC,KAAK,QACLC,SAAUV,EACVW,IAAI,KACJC,IAAI,MACJV,MAAOhB,GAAcY,aAAae,QAAQ,oBC3ClDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e41d2c0.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [brightness, setBrightness] = useState(\"\");\n  const [monitors, setMonitors] = useState([]);\n  const [selectedMonitor, setSelectedMonitor] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      const { data: monitorlist } = await axios.get(\n        \"http://localhost:4000/getmonitors\"\n      );\n      setMonitors(monitorlist);\n      setSelectedMonitor(monitorlist[0]);\n\n      const { data } = await axios.get(\"http://localhost:4000/get\");\n      let b = data * 100;\n      localStorage.setItem(\"brightness\", b);\n      setBrightness(b);\n    })();\n  }, []);\n\n  const control = async (e) => {\n    let value = e.target.value;\n    await axios.get(`http://localhost:4000/set/${value / 100}`);\n    localStorage.setItem(\"brightness\", value);\n    setBrightness(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <select name=\"\" id=\"monitor\">\n        {monitors.map((monitor) => {\n          return (\n            <option key={monitor} value={monitor}>\n              {monitor}\n            </option>\n          );\n        })}\n      </select>\n      \n      <input\n        type=\"range\"\n        onChange={control}\n        min=\"10\"\n        max=\"100\"\n        value={brightness || localStorage.getItem(\"brightness\")}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}