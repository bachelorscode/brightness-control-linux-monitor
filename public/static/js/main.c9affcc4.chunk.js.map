{"version":3,"sources":["App.js","index.js"],"names":["App","useState","brightness","setBrightness","monitors","setMonitors","setSelectedMonitor","timeoutId","setTimoutId","useEffect","a","axios","get","monitorlist","data","b","localStorage","setItem","control","e","value","target","id","setTimeout","console","log","className","name","map","monitor","type","onChange","min","max","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA+DeA,MA3Df,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGiCJ,mBAAS,IAH1C,mBAGWK,GAHX,aAIoBL,mBAAS,MAJ7B,mBAINM,EAJM,KAIKC,EAJL,KAKbC,qBAAU,WACR,sBAAC,oCAAAC,EAAA,sEACqCC,IAAMC,IACxC,qCAFH,uBACeC,EADf,EACSC,KAGRT,EAAYQ,GACZP,EAAmBO,EAAY,IALhC,SAOwBF,IAAMC,IAAI,6BAPlC,gBAOSE,EAPT,EAOSA,KACJC,EAAW,IAAPD,EACRE,aAAaC,QAAQ,aAAcF,GACnCZ,EAAcY,GAVf,2CAAD,KAYC,IAEH,IAAMG,EAAO,uCAAG,WAAOC,GAAP,iBAAAT,EAAA,yDACVU,EAAQD,EAAEE,OAAOD,OACjBb,EAFU,iDAKRe,EAAKC,WAAU,sBAAC,sBAAAb,EAAA,sEACdC,IAAMC,IAAN,oCAAuCQ,EAAQ,MADjC,OAEpBJ,aAAaC,QAAQ,aAAcG,GACnCjB,EAAciB,GACdZ,EAAY,MACZgB,QAAQC,IAAIL,GALQ,2CAMnB,GACHZ,EAAYc,GAZE,2CAAH,sDAeb,OACE,sBAAKI,UAAU,MAAf,UACE,wBAAQC,KAAK,GAAGL,GAAG,UAAnB,SACGlB,EAASwB,KAAI,SAACC,GACb,OACE,wBAAsBT,MAAOS,EAA7B,SACGA,GADUA,QAOnB,uBACEC,KAAK,QACLC,SAAUb,EAEVc,IAAI,KACJC,IAAI,MACJb,MAAOlB,GAAcc,aAAakB,QAAQ,oBCrDlDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c9affcc4.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [brightness, setBrightness] = useState(\"\");\n  const [monitors, setMonitors] = useState([]);\n  const [selectedMonitor, setSelectedMonitor] = useState(\"\");\n  const [timeoutId, setTimoutId] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const { data: monitorlist } = await axios.get(\n        \"http://localhost:4000/getmonitors\"\n      );\n      setMonitors(monitorlist);\n      setSelectedMonitor(monitorlist[0]);\n\n      const { data } = await axios.get(\"http://localhost:4000/get\");\n      let b = data * 100;\n      localStorage.setItem(\"brightness\", b);\n      setBrightness(b);\n    })();\n  }, []);\n\n  const control = async (e) => {\n    let value = e.target.value;\n    if (timeoutId) {\n      return;\n    }\n    const id = setTimeout(async () => {\n      await axios.get(`http://localhost:4000/set/${value / 100}`);\n      localStorage.setItem(\"brightness\", value);\n      setBrightness(value);\n      setTimoutId(null)\n      console.log(value)\n    }, 1)\n    setTimoutId(id)\n  };\n\n  return (\n    <div className=\"App\">\n      <select name=\"\" id=\"monitor\">\n        {monitors.map((monitor) => {\n          return (\n            <option key={monitor} value={monitor}>\n              {monitor}\n            </option>\n          );\n        })}\n      </select>\n\n      <input\n        type=\"range\"\n        onChange={control}\n        // onChange={control}\n        min=\"10\"\n        max=\"100\"\n        value={brightness || localStorage.getItem(\"brightness\")}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}